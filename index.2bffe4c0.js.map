{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAI/B,EAAS,CACb,KAAM,EAAM,IAAI,CAAC,MAAM,CACvB,KAAM,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,AAClC,EAEM,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,iBAE5C,CAAA,EAAO,gBAAgB,CAAG,WACxB,EAAU,QAAQ,CAAG,EAAO,IAAI,EAbjB,GAcf,EAAU,QAAQ,CAAG,EAAO,IAAI,EAfjB,CAgBjB,EAEA,EAAO,mBAAmB,CAAG,WAC3B,EAAa,QAAQ,CAAG,EAAO,IAAI,EAlBpB,GAmBf,EAAa,QAAQ,CAAG,EAAO,IAAI,EApBpB,CAqBjB,EAsDA,EAAU,gBAAgB,CAAC,QApDL,WACpB,IAAI,EAAU,QAAQ,EAMtB,IAAK,IAFC,EAAS,EAAM,SAAS,GAErB,EAAI,EAAG,EAAI,EAAO,IAAI,CAAE,IAC/B,EAAO,UAAU,CAAC,GAGpB,CAAA,EAAO,IAAI,GACX,EAAO,gBAAgB,GACzB,GAwCA,EAAU,gBAAgB,CAAC,QAtCL,WAChB,EAAU,QAAQ,GAItB,EAAM,SAAS,CAAC,IAEhB,EAAO,IAAI,GACX,EAAO,gBAAgB,GACzB,GA8BA,EAAa,gBAAgB,CAAC,QA5BL,WACvB,IAAI,EAAa,QAAQ,EAIpB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,EAAO,IAAI,GACX,EAAO,mBAAmB,GAC5B,GAkBA,EAAa,gBAAgB,CAAC,QAhBL,WACvB,IAAI,EAAa,QAAQ,EAIpB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,EAAO,IAAI,GACX,EAAO,mBAAmB,GAC5B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tBody = document.querySelector(\"tbody\");\nvar minLimit = 2;\nvar maxLimit = 10;\nvar fields = {\n    rows: tBody.rows.length,\n    cols: tBody.rows[0].cells.length\n};\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nfields.switchRowButtons = function() {\n    appendRow.disabled = fields.rows >= maxLimit;\n    removeRow.disabled = fields.rows <= minLimit;\n};\nfields.switchColumnButtons = function() {\n    appendColumn.disabled = fields.cols >= maxLimit;\n    removeColumn.disabled = fields.cols <= minLimit;\n};\nvar makeAppendRow = function() {\n    if (appendRow.disabled) return;\n    var newRow = tBody.insertRow();\n    for(var i = 0; i < fields.cols; i++)newRow.insertCell(-1);\n    fields.rows++;\n    fields.switchRowButtons();\n};\nvar makeRemoveRow = function() {\n    if (removeRow.disabled) return;\n    tBody.deleteRow(-1);\n    fields.rows--;\n    fields.switchRowButtons();\n};\nvar makeAppendColumn = function() {\n    if (appendColumn.disabled) return;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = tBody.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.insertCell(-1);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    fields.cols++;\n    fields.switchColumnButtons();\n};\nvar makeRemoveColumn = function() {\n    if (removeColumn.disabled) return;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = tBody.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.deleteCell(-1);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    fields.cols--;\n    fields.switchColumnButtons();\n};\nappendRow.addEventListener(\"click\", makeAppendRow);\nremoveRow.addEventListener(\"click\", makeRemoveRow);\nappendColumn.addEventListener(\"click\", makeAppendColumn);\nremoveColumn.addEventListener(\"click\", makeRemoveColumn);\n\n//# sourceMappingURL=index.2bffe4c0.js.map\n","'use strict';\n\nconst tBody = document.querySelector('tbody');\nconst minLimit = 2;\nconst maxLimit = 10;\n\nconst fields = {\n  rows: tBody.rows.length,\n  cols: tBody.rows[0].cells.length,\n};\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nfields.switchRowButtons = () => {\n  appendRow.disabled = fields.rows >= maxLimit;\n  removeRow.disabled = fields.rows <= minLimit;\n};\n\nfields.switchColumnButtons = () => {\n  appendColumn.disabled = fields.cols >= maxLimit;\n  removeColumn.disabled = fields.cols <= minLimit;\n};\n\nconst makeAppendRow = () => {\n  if (appendRow.disabled) {\n    return;\n  }\n\n  const newRow = tBody.insertRow();\n\n  for (let i = 0; i < fields.cols; i++) {\n    newRow.insertCell(-1);\n  }\n\n  fields.rows++;\n  fields.switchRowButtons();\n};\n\nconst makeRemoveRow = () => {\n  if (removeRow.disabled) {\n    return;\n  }\n\n  tBody.deleteRow(-1);\n\n  fields.rows--;\n  fields.switchRowButtons();\n};\n\nconst makeAppendColumn = () => {\n  if (appendColumn.disabled) {\n    return;\n  }\n\n  for (const row of tBody.rows) {\n    row.insertCell(-1);\n  }\n\n  fields.cols++;\n  fields.switchColumnButtons();\n};\n\nconst makeRemoveColumn = () => {\n  if (removeColumn.disabled) {\n    return;\n  }\n\n  for (const row of tBody.rows) {\n    row.deleteCell(-1);\n  }\n\n  fields.cols--;\n  fields.switchColumnButtons();\n};\n\nappendRow.addEventListener('click', makeAppendRow);\nremoveRow.addEventListener('click', makeRemoveRow);\nappendColumn.addEventListener('click', makeAppendColumn);\nremoveColumn.addEventListener('click', makeRemoveColumn);\n"],"names":["tBody","document","querySelector","fields","rows","length","cols","cells","appendRow","removeRow","appendColumn","removeColumn","switchRowButtons","disabled","switchColumnButtons","addEventListener","newRow","insertRow","i","insertCell","deleteRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","deleteCell"],"version":3,"file":"index.2bffe4c0.js.map"}